package gae.backend;

import java.util.ArrayList;
import java.util.List;

import javafx.collections.ObservableList;

import com.thoughtworks.xstream.XStream;

import engine.game.Game;



// In this use case, we are creating a level. Obviously, the first thing that has to happen is to create the level.

public class GameManager {
	LibraryData library = new LibraryData();
	List<LevelManager> LevelManagerList = new ArrayList<>();
	XStream xstream = new XStream();

	public void exportXML() {
		String xml = xstream.toXML(this);
	}

	public void importXML(String path) {
		xstream.fromXML(path);
	}

	public void setEditableInGame(Editable editable) {

	}

	public void addLevelToGame() {
		// When the user selects add new level, either the Author class or
		// another class will call this method.
		LevelManager manager = new LevelManager();
		LevelManagerList.add(manager);
	}

	public void getGameFromPreferences(Game game) {

	}

	public void createLevel() {

	}

	public WorldData getWorldData() {
		return null;
	}

<<<<<<< HEAD
	public ObservableList<Editable> getLibraryDataList() {
//		return library.getObservableList();
	    return null;
	}
=======
//	public ObservableList<Editable> getLibraryDataList() {
//		return library.getObservableList();
//	}
>>>>>>> 70abded86dad356ef059a20317fef514d20565d2
	
	private void createEditorViewInTab() {
	    
	}
	
	private void createEditorViewInPopup() {
	    
	}
}
