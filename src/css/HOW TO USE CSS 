HOW TO USE CSS IN JAVAFX FOR ANYONE
BY BRANDON
#RDatGV
* Brandon is also an amateur so apologies if I cannot answer all questions…

You can always look up specific syntax for CSS and use that same code for JavaFX. Feel free to look at my css files for examples. Of course, I have minimal experience with CSS and I just wanted to take time to learn how to incorporate css in java just to make things look nicer! 

I will be referencing my OpeningViewCSS.css and the gae.openingView package in the examples below. You can experiment by commenting out certain parts of my CSS classes or making your own. It takes a while and you HAVE TO REFRESH the project folder for the new CSS to be applied. Hopefully, this helps!

**** For JavaFx, you MUST add the -fx portion to any of the effects. So opacity would become -fx-opacity instead. Otherwise, the effect is not added…

1. Adding a style sheet: Includes everything that the object contains (so anything in BorderPane or everything in a certain VBox).

Syntax: In OpeningView.java

private static final String OPENINGVIEW_CSS = "css/OpeningViewCSS.css";
myScene.getStylesheets().add(OPENINGVIEW_CSS);

ex: OpeningViewCSS.css




2. Adding a style class: Specific to a particular class/object.

Syntax: In HoverPicture.java

image.getStyleClass().add("hoverPicture");

ex: 

.hoverPicture {
   -fx-opacity: 0.3;
}




3. Adding an ID: Specific to a particular Node.

Syntax: In DataForm.java

form.setId("dataForm");
HEADER.setId("welcomeBanner");

ex:

#welcomeBanner {
	-fx-font-size: 40;
}




4. Adding effects:

Syntax:

image.getStyleClass().add("hoverPicture");

ex: 

.hoverPicture {
   -fx-opacity: 0.3;
}

  .hoverPicture:hover {
    -fx-opacity: 1;
  }



You can always look up CSS syntax online and StackOverflow sometimes has good examples of CSS being incorporated into JavaFX. I’m not an expert by any means but thought this would help everyone do even basic things!

Some features that are possible via css: hover effects, opacity changes, font size, text color, padding (similar to insets in JavaFx), font type

* on padding, it goes TOP RIGHT BOTTOM LEFT
so -fx-padding: 100 0 0 175 would be 100 top, 0 on right/bottom, and 175 for left

- bchoi
